inherit = (function () {
    var F = function () {};
    /**
     * Функция реализует классическое наследование через прототип.
     * Прототип первого объеткта переустанавливается на прототип второго объекта. Таким образом, 
     * первый объект наследуется от второго - становится унаследованным от него.
     * Дополнительно, прототип унаследованного объекта (P) расширяется свойством .__super__ указывающем на прототип
     * родительского объекта (C).
     * @function inherit
     * @global 
     * @param  {object} C Объект, который необходимо наследовать от другого объекта.
     * @param  {object} P Объект, наследником которого следует сделать объект C
     * @return {any}   Функция не возвращает значений.
     */    
    return function (C, P) {
        if (typeof P === 'undefined') { P = {} };
        F.prototype = P.prototype;
        C.prototype = new F();
        C.prototype.constructor = C;
        C.prototype.__super__ = P.prototype;
    }
}());